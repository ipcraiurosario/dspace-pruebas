//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.07.21 at 10:22:56 AM CEST 
//


package org.orcid.ns;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for creation-method.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="creation-method">
 *   &lt;restriction base="{http://www.orcid.org/ns/orcid}non-empty-string">
 *     &lt;enumeration value="API"/>
 *     &lt;enumeration value="Direct"/>
 *     &lt;enumeration value="Member-referred"/>
 *     &lt;enumeration value="website"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "creation-method")
@XmlEnum
public enum CreationMethod {


    /**
     * The ORCID Record was created using the ORCID
     * 						Member API.
     * 					
     * 
     */
    API("API"),

    /**
     * The user registered on the /register page.
     * 					
     * 
     */
    @XmlEnumValue("Direct")
    DIRECT("Direct"),

    /**
     * The registered on the /oauth/signin.
     * 					
     * 
     */
    @XmlEnumValue("Member-referred")
    MEMBER_REFERRED("Member-referred"),

    /**
     * DEPRECATED use Direct or Member-referred
     * 						instead. The method used to create the ORCID Record (Website or
     * 						API).
     * 					
     * 
     */
    @XmlEnumValue("website")
    WEBSITE("website");
    private final String value;

    CreationMethod(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static CreationMethod fromValue(String v) {
        for (CreationMethod c: CreationMethod.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
